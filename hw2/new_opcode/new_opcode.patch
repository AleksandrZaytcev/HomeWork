diff --git a/Include/opcode.h b/Include/opcode.h
index 9ed5487..9fdadd1 100644
--- a/Include/opcode.h
+++ b/Include/opcode.h
@@ -159,6 +159,7 @@ extern "C" {
 #define SET_ADD         146
 #define MAP_ADD         147

+#define LOAD_OTUS 148

 enum cmp_op {PyCmp_LT=Py_LT, PyCmp_LE=Py_LE, PyCmp_EQ=Py_EQ, PyCmp_NE=Py_NE, PyCmp_GT=Py_GT, PyCmp_GE=Py_GE,
             PyCmp_IN, PyCmp_NOT_IN, PyCmp_IS, PyCmp_IS_NOT, PyCmp_EXC_MATCH, PyCmp_BAD};
diff --git a/Lib/opcode.py b/Lib/opcode.py
index e403365..b927734 100644
--- a/Lib/opcode.py
+++ b/Lib/opcode.py
@@ -189,4 +189,6 @@ EXTENDED_ARG = 145
 def_op('SET_ADD', 146)
 def_op('MAP_ADD', 147)

+def_op('LOAD_OTUS', 148)
+
 del def_op, name_op, jrel_op, jabs_op
diff --git a/Python/ceval.c b/Python/ceval.c
index 4e4adc2..90f8727 100644
--- a/Python/ceval.c
+++ b/Python/ceval.c
@@ -3128,6 +3128,22 @@ PyEval_EvalFrameEx(PyFrameObject *f, int throwflag)
             goto dispatch_opcode;
         }

+        TARGET(LOAD_OTUS)
+        {
+            x = GETLOCAL(0);
+            if (x != NULL) {
+                Py_INCREF(x);
+                PUSH(x);
+                x = GETITEM(consts, oparg);
+                Py_INCREF(x);
+                PUSH(x);
+                FAST_DISPATCH();
+            }
+            format_exc_check_arg(PyExc_UnboundLocalError,
+                                 UNBOUNDLOCAL_ERROR_MSG,
+                                 PyTuple_GetItem(co->co_varnames, oparg));
+        }
+
 #if USE_COMPUTED_GOTOS
         _unknown_opcode:
 #endif
diff --git a/Python/opcode_targets.h b/Python/opcode_targets.h
index 95eb127..6bb6fc7 100644
--- a/Python/opcode_targets.h